name: Deploy Astro site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  BUILD_PATH: "."
  NODE_VERSION: "20"

jobs:
  fetch_data:
    name: Fetch External Data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Setup Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: 1.76.6

      - name: Fetch external data
        env:
          HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
          HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
          EXCHANGE_RATE_API_KEY: ${{ secrets.EXCHANGE_RATE_API_KEY }}
        run: |
          node fetch-instagram-posts.mjs
          node fetch-tpt-products.mjs RELEVANCE
          node fetch-tpt-products.mjs MOST_RECENT

      - name: Upload fetched data
        uses: actions/upload-artifact@v3
        with:
          name: external-data
          path: |
            ./src/lib/fixtures/instagram_posts.json
            ./src/lib/fixtures/tpt_products_MOST_RECENT.json
            ./src/lib/fixtures/tpt_products_RELEVANCE.json
            ./public/images/instagram/*

  build_and_deploy:
    name: Build and Deploy
    needs: fetch_data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Download fetched data
        uses: actions/download-artifact@v3
        with:
          name: external-data

      - name: Build Site
        env:
          TINACLIENTID: ${{ secrets.TINACLIENTID }}
          TINATOKEN: ${{ secrets.TINATOKEN }}
          TINASEARCH: ${{ secrets.TINASEARCH }}
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  upload_google_products:
    name: Upload Google Products
    needs: fetch_data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Download fetched data
        uses: actions/download-artifact@v3
        with:
          name: external-data

      - name: Upload Google Products
        env:
          MERCHANT_ID: ${{ secrets.MERCHANT_ID }}
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_TOKEN }}' > token.json
          node delete-google-merchant.mjs
          node google-merchent.mjs
