name: Deploy Astro site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "."

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Fetch Instagram Posts
        env:
          HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
          HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
        run: npx node fetch-instagram-posts.mjs

      - name: Fetch Best Sellers TpT Products
        env:
          EXCHANGE_RATE_API_KEY: ${{ secrets.EXCHANGE_RATE_API_KEY }}
        run: npx node fetch-tpt-products.mjs RELEVANCE

      - name: Fetch Recent TpT Products
        env:
          EXCHANGE_RATE_API_KEY: ${{ secrets.EXCHANGE_RATE_API_KEY }}
        run: npx node fetch-tpt-products.mjs MOST_RECENT

      - name: Upload Google Products
        env:
          MERCHANT_ID: ${{ secrets.MERCHANT_ID }}
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_TOKEN }}' > token.json
          npx node google-merchent.mjs

      - name: Build Site
        env:
          TINACLIENTID: ${{ secrets.TINACLIENTID }}
          TINATOKEN: ${{ secrets.TINATOKEN }}
          TINASEARCH: ${{ secrets.TINASEARCH }}
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
